diff --git a/core/modules/media_library/src/Form/AddFormBase.php b/core/modules/media_library/src/Form/AddFormBase.php
index 83742a3a17..9a9ab1cd4e 100644
--- a/core/modules/media_library/src/Form/AddFormBase.php
+++ b/core/modules/media_library/src/Form/AddFormBase.php
@@ -796,6 +796,36 @@ protected function getSourceFieldName(MediaTypeInterface $media_type) {
       ->getName();
   }
 
+  /**
+   * Returns the label of the source field for a media type.
+   *
+   * @param \Drupal\media\MediaTypeInterface $media_type
+   *   The media type to get the source field name for.
+   *
+   * @return string
+   *   The label of the media type's source field.
+   */
+  protected function getSourceFieldLabel(MediaTypeInterface $media_type) {
+    return $media_type->getSource()
+      ->getSourceFieldDefinition($media_type)
+      ->getLabel();
+  }
+
+  /**
+   * Returns the description of the source field for a media type.
+   *
+   * @param \Drupal\media\MediaTypeInterface $media_type
+   *   The media type to get the source field name for.
+   *
+   * @return string
+   *   The description of the media type's source field.
+   */
+  protected function getSourceFieldDescription(MediaTypeInterface $media_type) {
+    return $media_type->getSource()
+      ->getSourceFieldDefinition($media_type)
+      ->getDescription();
+  }
+
   /**
    * Get all pre-selected media items from the form state.
    *
diff --git a/core/modules/media_library/src/Form/FileUploadForm.php b/core/modules/media_library/src/Form/FileUploadForm.php
index b7cbe7c6a6..d4e59bd9f3 100644
--- a/core/modules/media_library/src/Form/FileUploadForm.php
+++ b/core/modules/media_library/src/Form/FileUploadForm.php
@@ -155,13 +155,14 @@ protected function buildInputElement(array $form, FormStateInterface $form_state
 
     // Add a container to group the input elements for styling purposes.
     $form['container'] = [
-      '#type' => 'container',
+      '#type' => 'fieldset',
+      '#title' => $this->formatPlural($slots, 'Add file', 'Add files'),
     ];
 
     $process = (array) $this->elementInfo->getInfoProperty('managed_file', '#process', []);
     $form['container']['upload'] = [
       '#type' => 'managed_file',
-      '#title' => $this->formatPlural($slots, 'Add file', 'Add files'),
+      '#title' => $this->getSourceFieldLabel($media_type),
       // @todo Move validation in https://www.drupal.org/node/2988215
       '#process' => array_merge(['::validateUploadElement'], $process, ['::processUploadElement']),
       '#upload_validators' => $item->getUploadValidators(),
@@ -174,6 +175,7 @@ protected function buildInputElement(array $form, FormStateInterface $form_state
       '#theme' => 'file_upload_help',
       '#upload_validators' => $form['container']['upload']['#upload_validators'],
       '#cardinality' => $slots,
+      '#description' => $this->getSourceFieldDescription($media_type),
     ];
 
     // The file upload help needs to be rendered since the description does not
diff --git a/core/modules/media_library/tests/src/FunctionalJavascript/EmbeddedFormWidgetTest.php b/core/modules/media_library/tests/src/FunctionalJavascript/EmbeddedFormWidgetTest.php
index cb284610fa..afa5a0be8f 100644
--- a/core/modules/media_library/tests/src/FunctionalJavascript/EmbeddedFormWidgetTest.php
+++ b/core/modules/media_library/tests/src/FunctionalJavascript/EmbeddedFormWidgetTest.php
@@ -122,7 +122,7 @@ public function testInsertionAndReselection($widget) {
     $wrapper = $assert_session->elementExists('css', '#media_image_field-media-library-wrapper');
     $wrapper->pressButton('Add media');
     $this->assertNotNull($assert_session->waitForText('Add or select media'));
-    $page->attachFileToField('Add file', $this->container->get('file_system')->realpath($jpg_image->uri));
+    $page->attachFileToField('Image', $this->container->get('file_system')->realpath($jpg_image->uri));
     $this->assertNotNull($assert_session->waitForText('Alternative text'));
     $page->fillField('Alternative text', $this->randomString());
     $assert_session->elementExists('css', '.ui-dialog-buttonpane')->pressButton('Save and insert');
diff --git a/core/modules/media_library/tests/src/FunctionalJavascript/WidgetAccessTest.php b/core/modules/media_library/tests/src/FunctionalJavascript/WidgetAccessTest.php
index c7a96e635b..6eaca985f3 100644
--- a/core/modules/media_library/tests/src/FunctionalJavascript/WidgetAccessTest.php
+++ b/core/modules/media_library/tests/src/FunctionalJavascript/WidgetAccessTest.php
@@ -109,7 +109,7 @@ public function testWidgetAccess() {
       'create media',
     ]);
     $this->drupalGet('media-library', $url_options);
-    $assert_session->elementExists('css', '.js-media-library-view');
+    $assert_session->elementExists('css', '.view-media-library');
     $assert_session->fieldExists('Add files');
 
     // Assert the media library can not be accessed if the required state
diff --git a/core/modules/media_library/tests/src/FunctionalJavascript/WidgetUploadTest.php b/core/modules/media_library/tests/src/FunctionalJavascript/WidgetUploadTest.php
index 37be455fc3..359d8149df 100644
--- a/core/modules/media_library/tests/src/FunctionalJavascript/WidgetUploadTest.php
+++ b/core/modules/media_library/tests/src/FunctionalJavascript/WidgetUploadTest.php
@@ -70,7 +70,7 @@ public function testWidgetUpload() {
 
     // Assert the upload form is visible for type_four.
     $this->switchToMediaType('Four');
-    $assert_session->fieldExists('Add files');
+    $assert_session->fieldExists('Image');
     $assert_session->pageTextContains('Maximum 2 files.');
 
     // Create a user that can create media for all media types.
@@ -95,11 +95,11 @@ public function testWidgetUpload() {
 
     // Assert the upload form is now visible for default tab type_three.
     $assert_session->elementExists('css', '.js-media-library-add-form');
-    $assert_session->fieldExists('Add files');
+    $assert_session->fieldExists('Image');
 
     // Assert we can upload a file to the default tab type_three.
     $assert_session->elementNotExists('css', '.js-media-library-add-form[data-input]');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_image->uri));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_image->uri));
     $this->assertMediaAdded();
     $assert_session->elementExists('css', '.js-media-library-add-form[data-input]');
     // We do not have pre-selected items, so the container should not be added
@@ -149,7 +149,7 @@ public function testWidgetUpload() {
     $this->openMediaLibraryForField('field_twin_media');
     $this->switchToMediaType('Three');
     $png_uri_2 = $file_system->copy($png_image->uri, 'public://');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_2));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_2));
     $this->waitForFieldExists('Alternative text')->setValue($this->randomString());
     $this->pressSaveButton();
     $this->pressInsertSelected('Added one media item.');
@@ -168,7 +168,7 @@ public function testWidgetUpload() {
     $assert_session->pageTextContains('1 item selected');
     $assert_session->hiddenFieldValueEquals('current_selection', $selected_item_id);
     $png_uri_3 = $file_system->copy($png_image->uri, 'public://');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_3));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_3));
     $this->waitForText('The media item has been created but has not yet been saved.');
     $page->fillField('Name', 'Unlimited Cardinality Image');
     $page->fillField('Alternative text', $this->randomString());
@@ -204,7 +204,7 @@ public function testWidgetUpload() {
     // Assert we can now only upload one more media item.
     $this->openMediaLibraryForField('field_twin_media');
     $this->switchToMediaType('Four');
-    $this->assertFalse($assert_session->fieldExists('Add file')->hasAttribute('multiple'));
+    $this->assertFalse($assert_session->fieldExists('Image')->hasAttribute('multiple'));
     $assert_session->pageTextContains('One file only.');
 
     // Assert media type four should only allow jpg files by trying a png file
@@ -214,7 +214,7 @@ public function testWidgetUpload() {
     $this->waitForText('Only files with the following extensions are allowed');
     // Assert that jpg files are accepted by type four.
     $jpg_uri_2 = $file_system->copy($jpg_image->uri, 'public://');
-    $this->addMediaFileToField('Add file', $file_system->realpath($jpg_uri_2));
+    $this->addMediaFileToField('Image', $file_system->realpath($jpg_uri_2));
     $this->waitForFieldExists('Alternative text')->setValue($this->randomString());
     // The type_four media type has another optional image field.
     $assert_session->pageTextContains('Extra Image');
@@ -242,9 +242,9 @@ public function testWidgetUpload() {
     $selected_item_id = $checkbox->getAttribute('value');
     $checkbox->click();
     $assert_session->hiddenFieldValueEquals('current_selection', $selected_item_id);
-    $this->assertTrue($assert_session->fieldExists('Add files')->hasAttribute('multiple'));
+    $this->assertTrue($assert_session->fieldExists('Image')->hasAttribute('multiple'));
     $png_uri_5 = $file_system->copy($png_image->uri, 'public://');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_5));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_5));
     // assertWaitOnAjaxRequest() required for input "id" attributes to
     // consistently match their label's "for" attribute.
     $assert_session->assertWaitOnAjaxRequest();
@@ -266,7 +266,7 @@ public function testWidgetUpload() {
     // Assert removing an uploaded media item before save works as expected.
     $this->openMediaLibraryForField('field_unlimited_media');
     $this->switchToMediaType('Three');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_image->uri));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_image->uri));
     // Assert the media item fields are shown and the vertical tabs are no
     // longer shown.
     $this->waitForFieldExists('Alternative text');
@@ -288,7 +288,7 @@ public function testWidgetUpload() {
     $checkbox = $page->findField("Select $existing_media_name");
     $checkbox->click();
     // Assert we can add multiple files.
-    $this->assertTrue($assert_session->fieldExists('Add files')->hasAttribute('multiple'));
+    $this->assertTrue($assert_session->fieldExists('Image')->hasAttribute('multiple'));
     // Create a list of new files to upload.
     $filenames = [];
     $remote_paths = [];
@@ -297,7 +297,7 @@ public function testWidgetUpload() {
       $filenames[] = $file_system->basename($path);
       $remote_paths[] = $driver->uploadFileAndGetRemoteFilePath($file_system->realpath($path));
     }
-    $page->findField('Add files')->setValue(implode("\n", $remote_paths));
+    $page->findField('Image')->setValue(implode("\n", $remote_paths));
     // Assert the media item fields are shown and the vertical tabs are no
     // longer shown.
     $this->assertMediaAdded();
@@ -409,7 +409,7 @@ public function testWidgetUploadAdvancedUi() {
 
     // Assert the upload form is visible for type_four.
     $this->switchToMediaType('Four');
-    $assert_session->fieldExists('Add files');
+    $assert_session->fieldExists('Image');
     $assert_session->pageTextContains('Maximum 2 files.');
 
     // Create a user that can create media for all media types.
@@ -434,11 +434,11 @@ public function testWidgetUploadAdvancedUi() {
 
     // Assert the upload form is now visible for default tab type_three.
     $assert_session->elementExists('css', '.js-media-library-add-form');
-    $assert_session->fieldExists('Add files');
+    $assert_session->fieldExists('Image');
 
     // Assert we can upload a file to the default tab type_three.
     $assert_session->elementNotExists('css', '.js-media-library-add-form[data-input]');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_image->uri));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_image->uri));
     $this->assertMediaAdded();
     $assert_session->elementExists('css', '.js-media-library-add-form[data-input]');
     // We do not have a pre-selected items, so the container should not be added
@@ -488,7 +488,7 @@ public function testWidgetUploadAdvancedUi() {
     $this->openMediaLibraryForField('field_twin_media');
     $this->switchToMediaType('Three');
     $png_uri_2 = $file_system->copy($png_image->uri, 'public://');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_2));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_2));
     $this->waitForFieldExists('Alternative text')->setValue($this->randomString());
     // Assert we can also directly insert uploaded files in the widget.
     $this->saveAnd('insert');
@@ -509,7 +509,7 @@ public function testWidgetUploadAdvancedUi() {
     $assert_session->pageTextContains('1 item selected');
     $assert_session->hiddenFieldValueEquals('current_selection', $selected_item_id);
     $png_uri_3 = $file_system->copy($png_image->uri, 'public://');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_3));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_3));
     $this->waitForText('The media item has been created but has not yet been saved.');
     $assert_session->checkboxChecked("Select $existing_media_name");
     $page->fillField('Name', 'Unlimited Cardinality Image');
@@ -547,7 +547,7 @@ public function testWidgetUploadAdvancedUi() {
     // Assert we can now only upload one more media item.
     $this->openMediaLibraryForField('field_twin_media');
     $this->switchToMediaType('Four');
-    $this->assertFalse($assert_session->fieldExists('Add file')->hasAttribute('multiple'));
+    $this->assertFalse($assert_session->fieldExists('Image')->hasAttribute('multiple'));
     $assert_session->pageTextContains('One file only.');
 
     // Assert media type four should only allow jpg files by trying a png file
@@ -557,7 +557,7 @@ public function testWidgetUploadAdvancedUi() {
     $this->waitForText('Only files with the following extensions are allowed');
     // Assert that jpg files are accepted by type four.
     $jpg_uri_2 = $file_system->copy($jpg_image->uri, 'public://');
-    $this->addMediaFileToField('Add file', $file_system->realpath($jpg_uri_2));
+    $this->addMediaFileToField('Image', $file_system->realpath($jpg_uri_2));
     $this->waitForFieldExists('Alternative text')->setValue($this->randomString());
     // The type_four media type has another optional image field.
     $assert_session->pageTextContains('Extra Image');
@@ -590,7 +590,7 @@ public function testWidgetUploadAdvancedUi() {
     // Set the hidden field with the current selection via JavaScript and upload
     // a file.
     $this->getSession()->executeScript("jQuery('.js-media-library-add-form-current-selection').val('1,2,{$unpublished_media->id()}')");
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_3));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_3));
     $this->assertMediaAdded();
     // Assert the pre-selected items are shown.
     $this->getSelectionArea();
@@ -609,9 +609,9 @@ public function testWidgetUploadAdvancedUi() {
     $selected_item_id = $checkbox->getAttribute('value');
     $checkbox->click();
     $assert_session->hiddenFieldValueEquals('current_selection', $selected_item_id);
-    $this->assertTrue($assert_session->fieldExists('Add files')->hasAttribute('multiple'));
+    $this->assertTrue($assert_session->fieldExists('Image')->hasAttribute('multiple'));
     $png_uri_5 = $file_system->copy($png_image->uri, 'public://');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_uri_5));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_uri_5));
     $this->assertMediaAdded();
     $page->fillField('Alternative text', $this->randomString());
     // Assert the pre-selected items are shown.
@@ -638,7 +638,7 @@ public function testWidgetUploadAdvancedUi() {
     // Assert removing an uploaded media item before save works as expected.
     $this->openMediaLibraryForField('field_unlimited_media');
     $this->switchToMediaType('Three');
-    $this->addMediaFileToField('Add files', $this->container->get('file_system')->realpath($png_image->uri));
+    $this->addMediaFileToField('Image', $this->container->get('file_system')->realpath($png_image->uri));
     // Assert the media item fields are shown and the vertical tabs are no
     // longer shown.
     $this->assertMediaAdded();
@@ -657,7 +657,7 @@ public function testWidgetUploadAdvancedUi() {
     $checkbox = $page->findField("Select $existing_media_name");
     $checkbox->click();
     // Assert we can add multiple files.
-    $this->assertTrue($assert_session->fieldExists('Add files')->hasAttribute('multiple'));
+    $this->assertTrue($assert_session->fieldExists('Image')->hasAttribute('multiple'));
     // Create a list of new files to upload.
     $filenames = [];
     $remote_paths = [];
@@ -666,7 +666,7 @@ public function testWidgetUploadAdvancedUi() {
       $filenames[] = $file_system->basename($path);
       $remote_paths[] = $driver->uploadFileAndGetRemoteFilePath($file_system->realpath($path));
     }
-    $page->findField('Add files')->setValue(implode("\n", $remote_paths));
+    $page->findField('Image')->setValue(implode("\n", $remote_paths));
     // Assert the media item fields are shown and the vertical tabs are no
     // longer shown.
     $this->assertMediaAdded();
